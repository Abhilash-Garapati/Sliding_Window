class Solution 
{
    public static String smallestWindow(String s1, String s2) 
    {
        //  code here
        int need [] = new int[26];
        for(int i = 0;i<s2.length();i++)
        {
            need[s2.charAt(i)-'a']++;
        }
        int have [] = new int[26];
        int left = 0;
        int required = s2.length();
        int minlen = Integer.MAX_VALUE;
        int startIdx = -1;
        int formed = 0;
        for(int right = 0;right<s1.length();right++)
        {
            have[s1.charAt(right)-'a']++;
            if(need[s1.charAt(right)-'a']>0 && have[s1.charAt(right)-'a']<=need[s1.charAt(right)-'a'])
            {
                formed++;
            }
            while(formed==required)
            {
                int windowlen = right-left+1;
                if(windowlen<minlen)
                {
                    minlen = windowlen;
                    startIdx = left;
                }
                char leftchar = s1.charAt(left);
                have[leftchar-'a']--;
                if(need[leftchar-'a']>0 && have[leftchar-'a']<need[leftchar-'a'])
                {
                    formed--;
                }
                left++;
            }
        }
        return startIdx==-1?"":s1.substring(startIdx,startIdx+minlen);
    }
}
